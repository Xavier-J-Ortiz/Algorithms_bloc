1) Given the alphabetically sorted collection in this checkpoint, how many iterations would it take to find the value G using linear search?

For the collections given in this checkpoint, it would take 7 iterations to get to G using linear search.

2) Given the alphabetically sorted collection in this checkpoint, how many iterations would it take to find the value G using binary search?

It would take 3 iterations to get to the value G using binary search given an alphabetically sorted collection.

3) Calculate fib(10), fib(11), fib(12) by hand.

fib(10) = 1 + 1 + 2 + 3 + 5 + 8 + 13 + 21 + 34 = 55
fib(11) = 34 + 55 = 89
fib(12) = 55 + 89 = 144

----------------- Benchmark Output -----------------------------

                        user     system      total        real
fibonnaci_iterative  0.000000   0.010000   0.010000 (  0.009905)
fibonnaci_recursive  0.020000   0.000000   0.020000 (  0.014854)

----------------------------------------------------------------

1) Given an unsorted collection of a million items, which algorithm would you choose between linear search and binary search? Would you use an iterative or recursive solution? Explain your reasoning.

If unsorted, I would prefer to use a linear search, as the binary search would be useless and I could completly miss the item being searched if following the binary search algorithm since in an unsorted collection, the position doesn't say anything about the item's value with respect to the next.

2) Given a sorted collection of a million items, which algorithm would you choose between linear search and binary search? Would you use an iterative or recursive solution? Explain your reasoning.

If sorted, the binary search algorithm would be much more useful, mainly because it's using the sorting itself to hone in on the number.
